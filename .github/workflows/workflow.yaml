name: Continuous integration
on: [push]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

jobs:
  build-and-test:
    name: Build & Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        bazel_mode: [workspace, module]
        version: ["5.3.0", "6.0.0"]
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: bazelbuild/setup-bazelisk@v2
      - name: Configure
        env:
          BUILDBUDDY_API_KEY: ${{ secrets.BUILDBUDDY_API_KEY }}
        run: |
          cat >.bazelrc.local <<EOF
          build:ci --remote_header=x-buildbuddy-api-key="$BUILDBUDDY_API_KEY"
          build --config=ci
          EOF
          cat >~/.netrc <<EOF
          machine api.github.com
                  password ${{ secrets.GITHUB_TOKEN }}
          EOF
          cat >.bazelrc.disable-stardoc <<-EOF
          	build --build_tag_filters=-stardoc_generation
          	test --test_tag_filters=-stardoc_generation
          	EOF
          if [[ ${{ runner.os }} == Windows ]]; then
            # Stardoc complains about docstring quote indentation on Windows.
            cat .bazelrc.disable-stardoc >>.bazelrc.local
          fi
          if [[ ${{ matrix.bazel_mode }} == module ]]; then
            # Stardoc does not work with bzlmod.
            cat .bazelrc.disable-stardoc >>.bazelrc.local
            # Test with bzlmod enabled.
            cat >>.bazelrc.local <<-EOF
          	build --experimental_enable_bzlmod
          	EOF
          fi

      - name: Run tests (bzlmod)
        if: matrix.bazel_mode == 'module'
        working-directory: ./tests
        run: |
          echo "USE_BAZEL_VERSION=${{ matrix.version }}" > .bazeliskrc

          cp ../.bazelrc.local .
          cp ../.bazelrc .

          cat .bazelrc
          cat .bazelrc.local

          if [[ ${{ runner.os }} == Windows ]]; then
            # On Windows `//...` expands to `/...`.
            BAZEL_SH='C:\msys64\usr\bin\bash.exe' bazel test  ///...
          else
            bazel test  //...
          fi

      - name: Run tests (workspace)
        if: matrix.bazel_mode == 'workspace'
        run: |
          echo "USE_BAZEL_VERSION=${{ matrix.version }}" > .bazeliskrc

          if [[ ${{ runner.os }} == Windows ]]; then
            # On Windows `//...` expands to `/...`.
            BAZEL_SH='C:\msys64\usr\bin\bash.exe' bazel test ///... @rules_sh_tests//...
          else
            bazel test //... @rules_sh_tests//...
          fi
